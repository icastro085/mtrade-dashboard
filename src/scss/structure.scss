@mixin pm-value($pm-prop, $i) {
  #{$pm-prop}: ($pm-base * ($i));
}

@mixin border($border-color: $color-6, $border-prop: border) {
  #{$border-prop}: 1px solid $border-color;
}

@each $index, $color in (
  1: $color-1,
  2: $color-2,
  3: $color-3,
  4: $color-4,
  5: $color-5,
  6: $color-6
) {
  .color-#{$index} {
    color: $color;
  }
}

@each $align in (left, center, right, justify) {
  .text-#{$align} {
    text-align: $align;
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -$padding-base;
  margin-right: -$padding-base;
}

@for $i from 1 through $max-columns {
  .col-#{$i} {
    width: 100% / ($max-columns / $i);
    padding-left: $padding-base;
    padding-right: $padding-base;
  }
}

@for $i from 1 through $pm-max-number {
  .mt-#{$i} {
    @include pm-value(margin-top, $i);
  }

  .mb-#{$i} {
    @include pm-value(margin-bottom, $i);
  }

  .mr-#{$i} {
    @include pm-value(margin-right, $i);
  }

  .ml-#{$i} {
    @include pm-value(margin-left, $i);
  }

  .my-#{$i} {
    @include pm-value(margin-top, $i);
    @include pm-value(margin-bottom, $i);
  }

  .mx-#{$i} {
    @include pm-value(margin-right, $i);
    @include pm-value(margin-left, $i);
  }

  .pt-#{$i} {
    @include pm-value(padding-top, $i);
  }

  .pb-#{$i} {
    @include pm-value(padding-bottom, $i);
  }

  .pr-#{$i} {
    @include pm-value(padding-right, $i);
  }

  .pl-#{$i} {
    @include pm-value(padding-left, $i);
  }

  .py-#{$i} {
    @include pm-value(padding-top, $i);
    @include pm-value(padding-bottom, $i);
  }

  .px-#{$i} {
    @include pm-value(margin-right, $i);
    @include pm-value(padding-left, $i);
  }
}

table {
  width: 100%;
  border-collapse: collapse;

  tr:nth-child(even) {background-color: $color-4;}

  th, td {
    padding: $padding-base;
    text-align: left;
  }

  th {
    @include border($color-4, 'border-bottom');
  }

  td {
    button {
      font-size: 12px;
    }

    &.actions button {
      border-radius: 50%;
      padding: 10px;
      width: 40px;
      height: 40px;
    }
  }
}

.pagination {
  .page-item {
    @include border($color-3);
    float: left;
    font-size: 20px;
    border-radius: $border-radius;
    text-align: center;
    background-color: #fff;
    margin-right: $margin-base;
    user-select: none;

    .page-link {
      text-decoration: none;
      color: $color-3;
      display: block;
      min-width: 40px;
      padding: $padding-base;
    }

    a.page-link {
      cursor: pointer;
    }

    &.active {
      @include border($color-1);
      background-color: $color-1;
      .page-link {
        color: #fff;
      }
    }
  }
}

.clear-both {
  clear: both;
}

button {
  @include border;
  @include border-radius;
  background-color: #fff;
  padding: $padding-base 20px;
  color: $color-2;
  cursor: pointer;

  &.primary {
    @include border($color-1);
    background-color: $color-1;
    color: #fff;
  }
}

hr {
  margin: 20px 0;
  border: 1px solid $color-4;
}

.d-flex {
  display: flex;

  &.justify-content {
    &.space-between {
      justify-content: space-between;
    }
    &.flex-end {
      justify-content: flex-end;
    }
  }
}

.loading-overlayer {
  background-color: rgba($color: #000000, $alpha: .5);
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 9;
}

.loading {
  width: 50px;
  height: 50px;
  background-color: transparent;
  position: fixed;
  top: 50%;
  left: 50%;
  border-radius: 50%;
  z-index: 99;
  transform: translate(-50%, -50%);
  border: 1px solid $color-2;

  &::before {
    content: "";
    display: block;
    height: 100%;
    width: 2px;
    top: 0;
    left: 50%;
    background-color: $color-2;
    position: absolute;
    transform: translateX(-50%);
    animation: loading 0.5s linear infinite;
  }
}

@keyframes loading {
  from {
    transform: rotate(0deg) translateX(-50%);
  }

  to {
    transform: rotate(180deg) translateX(-50%);
  }
}

.disabled, .disabled * {
  pointer-events: none;
  opacity: 0.8;
  user-select: none;
}

.error {
  color: $color-error;
}

.invalid-feedback {
  display: none;
  width: 100%;
  margin-top: 10px;
  font-size: 80%;
  color: #dc3545;
}

.is-invalid + .invalid-feedback {
  display: block;
}

.popup-background-layer {
  background-color: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
}

.popup-content {
  background-color: transparent;
  position: fixed;
  width: 100%;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
}

.popup-content-layer {
  background-color: #FFF;
  padding: 20px;
  position: fixed;

  &.side {
    height: 100%;
    min-width: 75%;
    top: 0;
    right: 0;
    animation: poupp-side-animation .2s linear;
  }

  &.modal {
    border-radius: $border-radius;
    min-width: 500px;
    min-height: 300px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}


@keyframes poupp-side-animation {
  from {
    right: -75%;
  }

  to {
    right: 0;
  }
}
